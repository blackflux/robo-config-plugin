provider:
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - ssm:GetParameter
          Resource:
            - Fn::Join:
                - ':'
                - - arn:aws:ssm
                  - Ref: AWS::Region
                  - Ref: AWS::AccountId
                  - parameter/PROVISIONED_CONCURRENCY_ENABLED
        - Effect: Allow
          Action:
            - lambda:GetAlias
          Resource:
            - Fn::Join:
                - ':'
                - - arn:aws:lambda
                  - Ref: AWS::Region
                  - Ref: AWS::AccountId
                  - function
                  - Fn::Join:
                      - '-'
                      - - ${opt:service}
                        - api
                        - ${self:provider.stage}
                        - router
        - Effect: Allow
          Action:
            - cloudwatch:GetMetricData
            - lambda:PutProvisionedConcurrencyConfig
            - lambda:DeleteProvisionedConcurrencyConfig
            - lambda:GetProvisionedConcurrencyConfig
          Resource:
            - '*'
resources:
  Resources:
    ScalingRouterHookPreLambdaResource:
      DependsOn:
        - ScalingRouterHookPreLambdaFunction
      Type: Custom::LambdaDependency
      Properties:
        ServiceToken:
          Fn::GetAtt:
            - ScalingRouterHookPreLambdaFunction
            - Arn
        custom: ${file(^/../random-deploy-hash.cjs)}
functions:
  scalingRouterFn:
    handler: lib/hangler.scalingRouterFn
    memorySize: 256
    timeout: 30
    tags:
      service: ${self:service}
      stage: ${self:provider.stage}
      resource: scalingRouterFn
    events:
      - schedule:
          name: ${opt:service}-api-${self:provider.stage}-scaling-router
          rate: cron(*/5 * * * ? *)
  scalingRouterHookPre:
    handler: lib/hangler.scalingRouterHookPre
    memorySize: 256
    timeout: 30
    tags:
      service: ${self:service}
      stage: ${self:provider.stage}
      resource: scalingRouterHookPre
  router:
    dependsOn:
      - ScalingRouterHookPreLambdaResource
