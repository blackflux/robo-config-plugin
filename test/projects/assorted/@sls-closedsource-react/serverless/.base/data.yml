resources:
  Resources:
    DeployPolicy:
      Type: 'AWS::IAM::ManagedPolicy'
      Properties:
        ManagedPolicyName: >-
          ${self:service}-${self:provider.stage}-${opt:region}-user-deploy-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 's3:GetBucketLocation'
                - 's3:ListBucket'
              Resource:
                - 'arn:aws:s3:::${self:provider.deploymentBucket}'
            - Effect: Allow
              Action:
                - 's3:GetObject'
                - 's3:PutObject'
                - 's3:DeleteObject'
              Resource:
                - 'Fn::Join':
                    - /
                    - - 'arn:aws:s3:::${self:provider.deploymentBucket}'
                      - serverless
                      - ${opt:service}-api
                      - '${self:provider.stage}'
                      - '*'
            - Effect: Allow
              Action:
                - 'cloudformation:Describe*'
                - 'cloudformation:List*'
                - 'cloudformation:Get*'
                - 'cloudformation:PreviewStackUpdate'
              Resource:
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:cloudformation'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - '*'
            - Effect: Allow
              Action:
                - 'cloudformation:ValidateTemplate'
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - 'cloudformation:CreateStack'
                - 'cloudformation:UpdateStack'
                - 'cloudformation:DeleteStack'
              Resource:
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:cloudformation'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'stack/${opt:service}-api-${self:provider.stage}/*'
            - Effect: Allow
              Action:
                - 'iam:PassRole'
              Resource:
                'Fn::GetAtt':
                  - CfnAssumeRole
                  - Arn
            - Effect: Allow
              Action:
                - 'apigateway:GET'
                - 'apigateway:PATCH'
              Resource:
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:apigateway'
                      - Ref: 'AWS::Region'
                      - ''
                      - /restapis
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:apigateway'
                      - Ref: 'AWS::Region'
                      - ''
                      - /restapis/*
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:apigateway'
                      - Ref: 'AWS::Region'
                      - ''
                      - /apis
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:apigateway'
                      - Ref: 'AWS::Region'
                      - ''
                      - /apis/*
            - Effect: Allow
              Action:
                - "ssm:DescribeParameters"
              Resource:
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:ssm'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - '*'
            - Effect: Allow
              Action:
                - "ssm:GetParameter"
              Resource:
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:ssm'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'parameter/*'
            - Effect: Allow
              Action:
                - "kms:Decrypt"
              Resource:
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:kms'
                      - '*'
                      - Ref: 'AWS::AccountId'
                      - 'key/alias/aws/ssm'
    DeployUser:
      DependsOn: CfnAssumeRole
      Type: 'AWS::IAM::User'
      Properties:
        UserName: '${self:service}-${self:provider.stage}-${opt:region}-deploy-user'
        ManagedPolicyArns:
          - Ref: DeployPolicy
    DeployToken:
      DependsOn: DeployUser
      Type: 'AWS::IAM::AccessKey'
      Properties:
        UserName:
          Ref: DeployUser
    CfnAssumePolicy:
      Type: 'AWS::IAM::ManagedPolicy'
      Properties:
        ManagedPolicyName: >-
          ${self:service}-${self:provider.stage}-${opt:region}-role-cfn-assume-policy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'ec2:DescribeSecurityGroups'
                - 'ec2:DescribeSubnets'
                - 'ec2:DescribeVpcs'
                - 'ec2:DescribeNetworkInterfaces'
              Resource:
                - '*'
            - Effect: Allow
              Action:
                - 's3:GetObject'
              Resource:
                - 'Fn::Join':
                    - /
                    - - 'arn:aws:s3:::${self:provider.deploymentBucket}'
                      - serverless
                      - ${opt:service}-api
                      - '${self:provider.stage}'
                      - '*'
            - Effect: Allow
              Action:
                - 'apigateway:DELETE'
                - 'apigateway:GET'
                - 'apigateway:HEAD'
                - 'apigateway:OPTIONS'
                - 'apigateway:PATCH'
                - 'apigateway:POST'
                - 'apigateway:PUT'
                - 'apigateway:UpdateRestApiPolicy'
              Resource:
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:apigateway'
                      - Ref: 'AWS::Region'
                      - ''
                      - /restapis
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:apigateway'
                      - Ref: 'AWS::Region'
                      - ''
                      - /restapis/*
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:apigateway'
                      - Ref: 'AWS::Region'
                      - ''
                      - /apis
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:apigateway'
                      - Ref: 'AWS::Region'
                      - ''
                      - /apis/*
            - Effect: Allow
              Action:
                - 'logs:DescribeLogGroups'
              Resource:
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:logs'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'log-group::log-stream:*'
            - Effect: Allow
              Action:
                - 'logs:CreateLogGroup'
                - 'logs:CreateLogStream'
                - 'logs:DeleteLogGroup'
                - 'logs:DeleteLogStream'
                - 'logs:DescribeLogStreams'
                - 'logs:FilterLogEvents'
                - 'logs:PutRetentionPolicy'
                - 'logs:DeleteRetentionPolicy'
              Resource:
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:logs'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'Fn::Join':
                          - ''
                          - - 'log-group:/aws/lambda/'
                            - ${opt:service}-api
                            - '-${self:provider.stage}-'
                            - '*:log-stream:*'
            - Effect: Allow
              Action:
                - 'iam:GetRole'
                - 'iam:PassRole'
                - 'iam:CreateRole'
                - 'iam:DeleteRole'
                - 'iam:DetachRolePolicy'
                - 'iam:PutRolePolicy'
                - 'iam:AttachRolePolicy'
                - 'iam:DeleteRolePolicy'
              Resource:
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:iam'
                      - ''
                      - Ref: 'AWS::AccountId'
                      - 'Fn::Join':
                          - ''
                          - - role/
                            - ${opt:service}-api
                            - '-${self:provider.stage}-'
                            - Ref: 'AWS::Region'
                            - '-lambdaRole'
            - Effect: Allow
              Action:
                - 'lambda:CreateEventSourceMapping'
                - 'lambda:GetEventSourceMapping'
                - 'lambda:UpdateEventSourceMapping'
                - 'lambda:DeleteEventSourceMapping'
                - 'lambda:ListEventSourceMappings'
              Resource: '*'
            - Effect: Allow
              Action:
                - 'lambda:GetFunction'
                - 'lambda:CreateFunction'
                - 'lambda:DeleteFunction'
                - 'lambda:UpdateFunctionConfiguration'
                - 'lambda:UpdateFunctionCode'
                - 'lambda:ListVersionsByFunction'
                - 'lambda:PublishVersion'
                - 'lambda:CreateAlias'
                - 'lambda:DeleteAlias'
                - 'lambda:UpdateAlias'
                - 'lambda:GetFunctionConfiguration'
                - 'lambda:AddPermission'
                - 'lambda:InvokeFunction'
                - 'lambda:RemovePermission'
                - 'lambda:ListTags'
                - 'lambda:TagResource'
                - 'lambda:UntagResource'
                - 'lambda:PutFunctionConcurrency'
                - "lambda:PutProvisionedConcurrencyConfig"
                - "lambda:GetProvisionedConcurrencyConfig"
                - "lambda:DeleteProvisionedConcurrencyConfig"
              Resource:
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:lambda'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - function
                      - 'Fn::Join':
                          - ''
                          - - ${opt:service}-api
                            - '-${self:provider.stage}-'
                            - '*'
            - Effect: Allow
              Action:
                - 'events:PutRule'
                - 'events:DeleteRule'
                - 'events:DescribeRule'
                - 'events:PutTargets'
                - 'events:RemoveTargets'
              Resource:
                - 'Fn::Join':
                    - ':'
                    - - 'arn:aws:events'
                      - Ref: 'AWS::Region'
                      - Ref: 'AWS::AccountId'
                      - 'Fn::Join':
                          - ''
                          - - rule/
                            - ${opt:service}-api-
                            - '*'
    CfnAssumeRole:
      Type: 'AWS::IAM::Role'
      Properties:
        RoleName: '${self:service}-${self:provider.stage}-${opt:region}-cfn-assume-role'
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - cloudformation.amazonaws.com
              Action: 'sts:AssumeRole'
        ManagedPolicyArns:
          - Ref: CfnAssumePolicy
  Outputs:
    DeployAccessKeyId:
      Value:
        Ref: DeployToken
    DeploySecretAccessKey:
      Value:
        'Fn::GetAtt':
          - DeployToken
          - SecretAccessKey
    CfnAssumeRoleArn:
      Value:
        'Fn::GetAtt':
          - CfnAssumeRole
          - Arn
    dataStackHash:
      Value: ${fileFn(^/data-stack-hash.fn)}

<<<:
  - ${file(^/../data.yml)}
