provider:
  iam:
    deploymentRole: '${cf:${opt:service}-data-${self:provider.stage}.CfnAssumeRoleArn}'
  apiGateway:
    resourcePolicy:
      - Effect: Allow
        Principal: '*'
        Action: 'execute-api:Invoke'
        Resource:
          'Fn::Join':
            - ':'
            - - 'arn:aws:execute-api'
              - Ref: 'AWS::Region'
              - Ref: 'AWS::AccountId'
              - '*/*'

resources:
  Conditions:
    DataHashMismatchCondition:
      'Fn::Equals':
        - '${cf:${opt:service}-data-${self:provider.stage}.dataStackHash}'
        - '${self:resources.Outputs.dataStackHash.Value}'
  Outputs:
    dataHashErrorCondition:
      Value:
        'Fn::If':
          - DataHashMismatchCondition
          - '-'
          - 'Fn::ImportValue': Data.Stack.Hash.Mismatch
    dataStackHash:
      Value: ${fileFn(^/data-stack-hash.js)}

{{#nccEnabled}}
package:
  patterns:
    - '!**'
    - 'lib/**'
{{/nccEnabled}}
{{^nccEnabled}}
package:
  patterns:
    - '!test/**'
    - '!coverage/**'
    - '!config/**'
    - '!src/**'
{{/nccEnabled}}

<<<:
  - ${file(^/../api.yml)}
