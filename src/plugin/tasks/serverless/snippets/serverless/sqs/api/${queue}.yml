provider:
  environment:
    ${queue|UPPER|SNAKE}_QUEUE_URL: ${cf:${opt:service}-data-${self:provider.stage}.${queue|TITLE|STRIP}QueueUrl}

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - sqs:SendMessage
            - sqs:GetQueueAttributes
          Resource:
            - ${cf:${opt:service}-data-${self:provider.stage}.${queue|TITLE|STRIP}QueueArn}
            - ${cf:${opt:service}-data-${self:provider.stage}.${queue|TITLE|STRIP}DeadLetterQueueArn}

functions:
  queueProcessor${queue|TITLE|STRIP}Handler:
    memorySize: ${queueProcessorMemorySize}
    handler: lib/hangler.queueProcessor${queue|TITLE|STRIP}Handler
    reservedConcurrency: ${queueProcessorReservedConcurrency}
    timeout: ${queueProcessorTimeout}
    tags:
      service: ${self:service}
      stage: ${self:provider.stage}
      resource: queueProcessor${queue|TITLE|STRIP}Handler
    events:
      - sqs:
          arn: ${cf:${opt:service}-data-${self:provider.stage}.${queue|TITLE|STRIP}QueueArn}
          batchSize: ${queueProcessorBatchSize}
          maximumBatchingWindow: ${queueProcessorMaximumBatchingWindow}
          functionResponseType: ReportBatchItemFailures
